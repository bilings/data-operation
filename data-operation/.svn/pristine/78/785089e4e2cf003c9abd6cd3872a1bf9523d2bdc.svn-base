package com.hifo.dataoperation.service.setting.impl;

import com.hifo.dataoperation.mapper.setting.HfDictionaryMapper;
import com.hifo.dataoperation.mapper.base.Field;
import com.hifo.dataoperation.mapper.base.Table;
import com.hifo.dataoperation.entity.HfDictionary;
import com.hifo.dataoperation.service.base.BasicService;
import com.hifo.dataoperation.service.setting.DictionaryService;
import com.hifo.dataoperation.base.MybatisPlusService;
import com.hifo.dataoperation.util.StringUtil;
import com.hifo.dataoperation.vo.DictVO;
import com.hifo.dataoperation.vo.HfDictionaryVO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.StringTokenizer;

/**
 * 字典操作Service
 *
 * @author whc
 * @date 2019/4/1 16:54
 */
@Service
public class DictionaryServiceImpl extends MybatisPlusService<HfDictionaryMapper, HfDictionaryVO> implements DictionaryService {

    @Autowired
    private BasicService basicService;

    @Override
    public List<HfDictionary> query(Long id, String category) {
        return baseMapper.query(id, category);
    }

    @Override
    public List<HfDictionaryVO> queryTitle(Long id, String category) {
        return baseMapper.queryTitle(id, category);
    }

    @Override
    public List<HfDictionary> query() {
        return basicService.query2JavaWithAnd(Table.hf_dictionary, HfDictionary.class);
    }

    @Override
    public String id2Text(String id) {
        try {
            return basicService.load2Java(Table.hf_dictionary, Field.pk(id), HfDictionary.class).getItem();
        } catch (Exception e) {
            return "";
        }
    }

    @Override
    public String ids2Text(String ids) {
        try {
            StringBuilder texts = new StringBuilder();
            String token = ",";
            for (String id : ids.split(token)) {
                if (texts.length() > 0) {
                    texts.append(",").append(id2Text(id));
                } else {
                    texts.append(id2Text(id));
                }
            }
            return texts.toString();
        } catch (Exception e) {
            return "";
        }
    }

    @Override
    public String texts2Id(String texts, String category) throws Exception {
        List<HfDictionary> dictionaryList = baseMapper.query(null, category);
        texts = texts.replace("，", ",");
        StringTokenizer st = new StringTokenizer(texts, ",");
        StringBuilder ids = new StringBuilder();
        while (st.hasMoreTokens()) {
            String text = st.nextToken();
            if (StringUtil.isNull(text)) {
                continue;
            }
            String id = null;
            for (HfDictionary dictionary : dictionaryList) {
                if (dictionary.getItem().equals(text)) {
                    id = dictionary.getId().toString();
                    break;
                }
            }
            if (id == null) {
                throw new Exception("错误的字典数据: " + texts);
            }
            if (ids.length() > 0) {
                ids.append(",").append(id);
            } else {
                ids.append(id);
            }
        }
        return ids.toString();
    }

    @Override
    public List<DictVO> dictItemsList() {
        return baseMapper.selectListByItems();
    }
}
