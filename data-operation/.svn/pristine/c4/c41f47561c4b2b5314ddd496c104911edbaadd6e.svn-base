package com.hifo.dataoperation.controller;

import com.hifo.dataoperation.base.BasicController;
import com.hifo.dataoperation.intercept.RequiredPermission;
import com.hifo.dataoperation.service.estate.BusRoomService;
import com.mongodb.client.FindIterable;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.apache.commons.lang3.StringUtils;
import org.bson.Document;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;


/**
 * 房号管理
 *
 * @author jinzhichen
 * @date 2019/4/23 15:12
 */
@Api(tags = "房号管理")
@RestController
@RequestMapping("/room")
public class BusRoomController extends BasicController {

    @Autowired
    private MongoTemplate mongoTemplate;
    @Autowired
    private BusRoomService busRoomService;

    /**
     * 根据楼栋ID查询单元信息
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询楼栋单元信息")
    @GetMapping(value = "/util")
    @ApiImplicitParams({@ApiImplicitParam(name = "id", value = "楼栋id", paramType = "query", dataType = "String", required = true)
    })
    @RequiredPermission("100")
    public ApiResult qryUtil(String buildingId) {
        if (StringUtils.isBlank(buildingId)) {
            return ApiResult.failed("参数不能为空");
        }
//        return buildingService.qryBusBuildings(entity);
        List list = new ArrayList(){{
            add("一单元");
            add("二单元");
        }};
        return  ApiResult.success(list);
    }

    /**
     * 根据楼栋id查询房号
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询房号")
    @GetMapping(value = "/roomList")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "buildingId", value = "楼栋id", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "util", value = "单元号", paramType = "query", dataType = "String", required = true)
    })
    @RequiredPermission("100")
    public ApiResult RoomList(String buildingId,String util) {
        if (StringUtils.isBlank(buildingId) ||StringUtils.isBlank(util)) {
            return ApiResult.failed("参数不能为空");
        }
        return busRoomService.queryList(buildingId,util);
    }
    /**
     * 封装室号
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询房号")
    @GetMapping(value = "/roomhead")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "buildingId", value = "楼栋id", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "util", value = "单元号", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "type", value = "类型", paramType = "query", dataType = "String", required = true)
    })
    @RequiredPermission("100")
    public ApiResult room(String buildingId,String util,String type) {
            return ApiResult.success(6);
    }

    /**
     * 封装头部列表
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询房号")
    @GetMapping(value = "/pageHead")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "buildingId", value = "楼栋id", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "util", value = "单元号", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "type", value = "类型", paramType = "query", dataType = "String", required = true)
    })
    public ApiResult packageHeadList() {
        Document query = new Document();
        query.append("buildingId","58f56158e087110d9c88ce74");
        FindIterable<Document> ss = mongoTemplate.getCollection("room2").find(query);
        for (Document s : ss) {
            Document document = new Document();
            document.append("physicsFloor",s.get("floor"));
            document.append("city",s.get("cityName"));
            document.append("unit",s.get("1"));
            document.append("communityName",s.get("communityName"));
            document.append("floor",s.get("floor"));
            document.append("floorOverGroundNo",10);
            document.append("buildingId","58f56158e087110d9c88ce74");
            document.append("floorUnderGroundNo",0);
            document.append("roomNo",s.get("roomName"));
            document.append("houseType","2室1厅");
            document.append("floorTotalNo",10);
            document.append("buildArea",89.9);
            document.append("district","江北区");
            document.append("totalFloor","10");
            document.append("nominalFloor",s.get("floor"));
            mongoTemplate.getCollection("warehouse_room_service").insertOne(document);
        }
        System.out.println("**************ok**********");
        return null;
    }
}
