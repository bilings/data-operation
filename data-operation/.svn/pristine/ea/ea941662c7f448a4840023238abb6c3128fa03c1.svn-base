package com.hifo.dataoperation.controller;

import com.hifo.dataoperation.base.BasicController;
import com.hifo.dataoperation.entity.BusBuilding;
import com.hifo.dataoperation.entity.BusRoom;
import com.hifo.dataoperation.intercept.RequiredPermission;
import com.hifo.dataoperation.pagination.Pagination;
import com.hifo.dataoperation.service.estate.BusBuildingService;
import com.hifo.dataoperation.service.estate.BusRoomService;
import com.hifo.dataoperation.util.ExcelUtil;
import com.hifo.dataoperation.util.RequestUtil;
import com.hifo.dataoperation.vo.BusRoomVO;
import io.swagger.annotations.*;
import lombok.var;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.servlet.http.HttpServletResponse;
import java.util.ArrayList;
import java.util.List;


/**
 * 房号管理
 *
 * @author jinzhichen
 * @date 2019/4/23 15:12
 */
@Api(tags = "房号管理")
@RestController
@RequestMapping("/room")
public class BusRoomController extends BasicController {

    @Autowired
    private BusRoomService busRoomService;

    /**
     * 根据楼栋ID查询单元信息
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询楼栋单元信息")
    @GetMapping(value = "/util")
    @ApiImplicitParams({@ApiImplicitParam(name = "id", value = "楼栋id", paramType = "query", dataType = "String", required = true)
    })
    @RequiredPermission("100")
    public ApiResult qryUtil(String buildingId) {
        if (StringUtils.isBlank(buildingId)) {
            return ApiResult.failed("参数不能为空");
        }
//        return buildingService.qryBusBuildings(entity);
        List list = new ArrayList(){{
            add("一单元");
            add("二单元");
        }};
        return  ApiResult.success(list);
    }

    /**
     * 根据楼栋id查询房号
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询房号")
    @GetMapping(value = "/roomList")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "buildingId", value = "楼栋id", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "util", value = "单元号", paramType = "query", dataType = "String", required = true)
    })
    @RequiredPermission("100")
    public ApiResult RoomList(String buildingId,String util) {
        if (StringUtils.isBlank(buildingId) ||StringUtils.isBlank(util)) {
            return ApiResult.failed("参数不能为空");
        }
        return busRoomService.queryList(buildingId,util);
    }

    /**
     * 封装头部列表
     * @param buildingId
     * @return
     */
    @ApiOperation(value = "根据楼栋id查询房号")
    @GetMapping(value = "/pageHead")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "buildingId", value = "楼栋id", paramType = "query", dataType = "String", required = true),
            @ApiImplicitParam(name = "util", value = "单元号", paramType = "query", dataType = "String", required = true)
    })
    @RequiredPermission("100")
    public ApiResult packageHeadList(String buildingId,String util) {
        if (StringUtils.isBlank(buildingId) ||StringUtils.isBlank(util)) {
            return ApiResult.failed("参数不能为空");
        }
        return busRoomService.queryList(buildingId,util);
    }
}
